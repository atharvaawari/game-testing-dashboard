<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Matser Admin </title>
  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
  <!-- <<<<<<<<< - my style sheet - >>>>>>>>>> -->
  <link href="https://fonts.googleapis.com/css2?family=Nunito:wght@400;500;600;700;800;900&display=swap"
    rel="stylesheet">
  <style>
    body {
      font-family: 'Nunito', sans-serif;
      background-color: #f3f4f6;
      margin: 0;
      padding: 0;
      text-align: center;
    }

    a {
      text-decoration: none;
    }

    label {
      font-size: 18px;
      vertical-align: sub;
      font-weight: 700;
    }

    .input-box {
      text-align: left;
      margin: 1.5rem 1rem 0px 1rem;
    }

    h1 {
      display: block;
      margin-bottom: 0.5rem;
      color: #555;
      margin-top: 1rem;
      font-weight: 600;
    }

    h2 {
      color: #333;
      margin-top: 2rem;
    }

    h4 {
      text-transform: capitalize;
      text-align: left;
      font-weight: 700;
      font-size: 16px;
    }

    input[type="date"] {
      width: 100px;
      padding: 0.5rem;
      margin-bottom: 1rem;
      border: 1px solid #e0e0e0;
      border-radius: 4px;
    }

    button {
      background-color: #007BFF;
      color: #ffffff;
      border: none;
      border-radius: 4px;
      padding: 0.5rem 1rem;
      margin: 0.5rem;
      cursor: pointer;
      transition: background-color 0.3s;
    }


    small {
      font-size: .875em;
      padding: 6px;
      border-radius: 8px;
      color: gray;
    }


    .w-sm {
      width: 30%;
    }

    .titl2 {
      font-weight: 800;
      font-size: 20px;
      text-transform: capitalize;
    }

    .center {
      display: flex;
      flex-direction: column;
      justify-content: flex-start;
      align-items: center;
      background: #8a2be233;
      padding: 15px;
      border-radius: 8px;
      height: 100%;
    }

    .tr {
      border: 1px solid black;
      padding: 0 5px;
      background: #F1F6F9;
    }

    .th {
      font-weight: 700;
      border: 1px solid black;
      width: fit-content;
      padding: 10px 14px;
      margin: 30px 0;
      background: #FFF89A;
    }

    .color-F7D716D9 {
      background: #F7D716D9;
    }

    .color-F66B0EE0 {
      background: #F66B0EE0;
    }

    .color-5BF477 {
      background: #5BF477;
    }

    .color-FF5F9E {
      background: #FF5F9E;
    }

    table {
      font-size: 14px;
      caption-side: bottom;
      border-collapse: collapse;
      margin: auto;
      box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.25) !important;
    }

    .body {
      width: 450px;
      overflow: auto;
      display: none;
      overflow: auto;
      background: white;
      position: fixed;
      left: 51px;
      top: 25px;
      left: 50%;
      transform: translateX(-50%);
      padding: 1rem;
      border-radius: 16px;
      box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.25) !important;
      opacity: 0;
      transition: opacity 0.3s, transform 0.3s;
      z-index: 10000;
    }

    .body.show {
      display: block;
      opacity: 1;
    }

    .th-style {
      padding: .5rem .5rem;
      background-color: #FFD966;
      border-bottom: 1px solid #8080805e;
      font-weight: 800;
    }

    .baged--1 {
      background: #FFCC8F;
      padding: 5px 8px;
      margin: 0 10px;
      border-radius: 7px;
      display: inline-block;
    }

    .category-container {
      display: inline-block;
      min-width: 950px;
    }

    .accordion-item {
      width: 100%;
    }

    .grid-box-7-3 {
      display: grid;
      grid-template-columns: 70% 30%;
    }

    .alert-success {
      z-index: -1 !important;
    }

    .accordion-button button {
      position: absolute;
      right: 5rem;
    }


    .w-btn-input input {
      width: 60px;
      background-color: #fff;
    }

    .w-btn-input {
      display: inline-block;
    }

    .bck-border {
      border: 1px solid black;
      padding: 6px;
      border-radius: 5px;
      background-color: #fff;
      border: 1px solid rgba(0, 0, 0, .125);
    }

    .section-header {
      display: flex;
      justify-content: space-between;
    }

    .accordion-button {
      width: 82%;
    }

    .acc-activity-box {
      display: inline-block;
      padding-top: 6px;
    }

    .accordion-header {
      display: flex;
      justify-content: space-between;
      box-shadow: inset 0 -1px 0 rgba(0, 0, 0, .125);
    }

    .accordion-button::after {
      margin-bottom: 9px;
      margin-left: 10px;
    }

    .accordion-button:not(.collapsed) {
      color: #0c63e4;
      background-color: white;
      box-shadow: inset 0 -1px 0 rgba(0, 0, 0, .125);
    }

    .f-icon {
      font-size: 15px;
      padding: .2rem
    }

    .divider-line {
      box-shadow: inset 0 -1px 0 rgba(0, 0, 0, .125);
    }

    .dropdown {
      position: relative;
      display: inline-block;
    }

    .dropdown button {
      padding: 10px;
      font-size: 16px;
      margin-left: 0;
    }

    .dropdown-content {
      display: none;
      position: absolute;
      background-color: #f9f9f9;
      min-width: 200px;
      box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);
      z-index: 1;
      height: 300px;
      overflow-y: scroll;
    }

    .dropdown-content.show {
      display: block;

    }

    .dropdown-content a {
      padding: 12px 16px;
      display: block;
      text-decoration: none;
      color: #333;
    }

    .dropdown-content a:hover {
      background-color: #ddd;
    }
  </style>
  <style>
    /* Style for the multiple select */
    select {
      width: 200px;
      padding: 8px;
      font-size: 14px;
      border: 1px solid #ccc;
      border-radius: 4px;
      box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1);
      background-color: #fff;
    }

    /* Style for the selected options */
    select option:checked {
      background-color: #007bff;
      color: #fff;
    }

    .btn-on {
      color: #fff;
  background-color: #157347;
  border-color: #146c43;
    }

    .btn-off {
      color: #fff;
  background-color: #bb2d3b;
  border-color: #b02a37;
    }
  </style>
</head>

<body>
  <main>
    <%- include('../partials/header.ejs') -%>

      <div class="container mt-5">

        <section>
          <div class="category-container mb-3">
            <div class="accordion-item">
              <div class="accordion-header" id="">
                <a class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#w--targets-box"
                  aria-expanded="true" aria-controls="collapseThree">
                  <h4>Employee List</h4>
                </a>
                <div class="acc-activity-box">

                  <!-- add targets pop -->
                  <button class="float-end" onclick="toggleBody('-add-emp')">Add </button>

                  <div class="body" id="body-add-emp" style="z-index: 99999;">
                    <div>
                      <div class="tr pending-leaves-container">
                        <div class="edit-form m-2 pb-3">
                          <p class="titl2">Add Employee</p>
                          <hr>

                          <div class="input-box">
                            <label for="">Name</label>
                            <input id="add-emp-name" type="text">
                          </div>
                          <div class="input-box">
                            <label for="">Email</label>
                            <input id="add-emp-email" type="text">
                          </div>
                          <div class="input-box">
                            <label for="">Total leaves </label>
                            <input id="add-emp-total-leaves" type="text">
                          </div>
                          <div class="input-box">
                            <label for="">Privileges </label>

                            <div class="form-check ms-2" id="add-emp-privileges">
                              <input class="form-check-input" type="radio" value="Employee">
                              <small class="form-check-label  text-dark" for="flexCheckDefault">
                                Employee
                              </small><br>
                              <input class="form-check-input" type="radio" value="UploadsAdmin" id="flexCheckDefault"
                                id="add-emp-privileges">
                              <small class="form-check-label  text-dark" for="flexCheckDefault">
                                UploadsAdmin
                              </small><br>
                              <input class="form-check-input" type="radio" value="GameAdmin" id="flexCheckDefault"
                                id="add-emp-privileges">
                              <small class="form-check-label  text-dark" for="flexCheckDefault">
                                GameAdmin
                              </small><br>
                              <input class="form-check-input" type="radio" value="AnimationAdmin" id="flexCheckDefault"
                                id="add-emp-privileges">
                              <small class="form-check-label  text-dark" for="flexCheckDefault">
                                AnimationAdmin
                              </small><br>
                              <input class="form-check-input" type="radio" value="LeavesAdmin" id="flexCheckDefault"
                                id="add-emp-privileges">
                              <small class="form-check-label  text-dark" for="flexCheckDefault">
                                LeavesAdmin
                              </small><br>
                              <input class="form-check-input" type="radio" value="MasterAdmin" id="flexCheckDefault"
                                id="add-emp-privileges">
                              <small class="form-check-label  text-dark" for="flexCheckDefault">
                                MasterAdmin
                              </small>
                            </div>

                          </div>

                        </div>
                      </div>
                    </div>
                    <div>
                      <button
                        onclick="onFormSubmit(['add-emp-name','add-emp-email','add-emp-total-leaves','add-emp-privileges'],'add-employee')">
                        Save
                      </button>
                      <button onclick="toggleBody('-add-emp')">
                        Close
                      </button>
                    </div>
                  </div>

                </div>
              </div>

              <div id="w--targets-box" class="accordion-collapse collapse show" aria-labelledby=""
                data-bs-parent="#accordionExample">
                <div class="accordion-body">

                  <table id="weekly-targets-table">
                    <thead>
                      <tr class="th-style">
                        <th class="th-style">Sno </th>
                        <th class="th-style">Name</th>
                        <th class="th-style">Email </th>
                        <th class="th-style">Privileges </th>
                        <th class="th-style">Edit</th>
                      </tr>
                    </thead>
                    <tbody>

                      <% for (let i=0; i < empList.length; i++) { %>

                        <tr>
                          <td>
                            <%=i+1%>
                          </td>
                          <td>
                            <%=empList[i].name%>
                          </td>
                          <td>
                            <%=empList[i].email%>
                          </td>
                          <td>
                            <% const p1JSON=empList[i].p1; %>

                              <% if (p1JSON) { %>
                                <% try { %>

                                  <% const privileges=JSON.parse(p1JSON); %>
                                    <% const truePrivileges=Object.keys(privileges).filter(key=> privileges[key] ===
                                      true); %>

                                      <% if (privileges.MasterAdmin) { %>
                                        <span class="badge bg-success">Master Admin</span>
                                        <% } else if (truePrivileges.length===1) { %>
                                          <span class="badge bg-secondary">
                                            <%= truePrivileges[0] %>
                                          </span>
                                          <% } else if (truePrivileges.length> 1) { %>
                                            <span class="badge bg-secondary">
                                              <%= truePrivileges[0] + ' +' %>
                                            </span>
                                            <% } else { %>
                                              <span class="badge bg-danger">Employee</span>
                                              <% } %>

                                                <% } catch (error) { %>
                                                  <!-- Handle the case when parsing fails -->
                                                  <p>Error parsing JSON: <%= error.message %>
                                                  </p>
                                                  <% } %>
                                                    <% } else { %>
                                                      <!-- Handle the case when p1 is an empty string or null -->
                                                      <p>No privileges information available.</p>
                                                      <% } %>



                          </td>
                          <td>
                            <button onclick="toggleBody('-edit-emp-<%=i%>')"
                              class="pop-up-btn btn  btn-secondary f-icon"> ✏️</button>

                            <!-- update targets pop -->
                            <div class="body" id="body-edit-emp-<%=i%>" style="z-index: 99999;">
                              <div>
                                <div class="tr pending-leaves-container">
                                  <div class="edit-form m-2 pb-3">
                                    <p class="titl2">Update Employee</p>
                                    <hr>

                                    <div class="input-box">
                                      <label for="">Name</label>
                                      <input id="edit-emp-name-<%=i%>" type="text" value="<%=empList[i].name%>">
                                    </div>
                                    <div class="input-box">
                                      <label for="">Email</label>
                                      <input id="edit-emp-email-<%=i%>" type="text" value="<%=empList[i].email%>">
                                    </div>
                                    <div class="input-box">
                                      <label for="">Total leaves </label>
                                      <input id="edit-emp-total-leaves-<%=i%>" type="text"
                                        value="<%=empList[i].total_leaves%>">
                                    </div>
                                    <div class="input-box">
                                      <label for="">Extra leaves </label>
                                      <input id="edit-emp-extra-leaves-<%=i%>" type="text"
                                        value="<%=empList[i].extra_leaves%>">
                                    </div>
                                    <div class="input-box">
                                      <label for="">Penalty </label>
                                      <input id="edit-emp-penalty-<%=i%>" type="text" value="<%=empList[i].penalty%>">
                                    </div>
                                    <div class="input-box">
                                      <label for="">Privileges </label>

                                      <div class="form-check ms-2" id="edit-emp-privileges-<%=i%>">
                                        <% const parsedP1=JSON.parse(empList[i].p1); %>
                                          <% for (const key in parsedP1) { %>
                                            <% if(parsedP1[key]===true) { %>
                                              <div class="form-check form-switch">
                                                <label class="form-check-label " for="rd-pri-<%= key %>">
                                                  <%= key %>
                                                </label>
                                                <input id="rd-pri-<%= key %>" onclick="updateSwitchValue(this)"
                                                  value="on" class="form-check-input" type="checkbox" role="switch" checked>
                                              </div>
                                              <% } else { %>
                                                <div class="form-check form-switch">
                                                  <label class="form-check-label" for="rd-pri-<%= key %>">
                                                    <%= key %>
                                                  </label>
                                                  <input id="rd-pri-<%= key %>" onclick="updateSwitchValue(this)"
                                                    value="off" class="form-check-input" type="checkbox" role="switch">
                                                </div>

                                                <% } %>
                                                  <% } %>

                                      </div>
                                    </div>


                                    <label class="form-check-label" hidden>Employee Id</label>
                                    <input id="edit-emp-id-<%=i%>" type="text" value="<%=empList[i].id%>" hidden>

                                  </div>
                                </div>
                              </div>
                              <div>
                                <button onclick="onFormSubmit(
                                ['edit-emp-name-<%=i%>',
                                'edit-emp-email-<%=i%>',
                                'edit-emp-total-leaves-<%=i%>',
                                'edit-emp-privileges-<%=i%>',
                                'edit-emp-extra-leaves-<%=i%>',
                                'edit-emp-penalty-<%=i%>',
                                'edit-emp-id-<%=i%>',
                                'edit-emp-status-<%=i%>'
                              ]
                                ,'edit-employee')">
                                  Save
                                </button>
                                <button onclick="toggleBody('-edit-emp-<%=i%>')">
                                  Close
                                </button>
                              </div>
                            </div>
                            <!-- update targets pop -->
                          </td>
                        </tr>

                        <% } %>

                    </tbody>
                  </table>


                </div>
              </div>
            </div>

          </div>

        </section>

      </div>
      </div>
  </main>

  <script>
    async function onFormSubmit(ids, apiAddress) {

      const formData = [];

      for (let i = 0; i < ids.length; i++) {
        const inputField = document.getElementById(`${ids[i]}`);
        let value;

        if (inputField.tagName == 'DIV') {
          let privileges = [];

          const radios = document.querySelectorAll(`#${ids[i]} input`);

          console.log('--', ids[i])

          for (var j = 0; j < radios.length; j++) {
            if (radios[j].checked) {
              privileges.push(radios[j].value);
            }
          }

          value = privileges;

        } else {
          value = inputField.value;

          if (value === '') {
            alert('please fill all required fields')
            return
          }

        }

        formData.push({
          [`${inputField.previousElementSibling.textContent.trim().replace(/\s/g, "")}`]: value
        });

      }

      await submitData(formData, apiAddress)

    }

    async function submitData(bodyData, apiAddress) {
      try {
        const response = await fetch(apiAddress, {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify(bodyData),
        });

        if (response.ok) {
          const responseData = await response.json();
          showMessagePopup1(responseData.Success);
        } else {
          // Check if the response has content
          const contentType = response.headers.get("content-type");
          if (contentType && contentType.includes("application/json")) {
            const errorData = await response.json();
            showMessagePopup1(`Error submitting leaves: ${errorData.message}`);
          } else {
            showMessagePopup1("Error submitting leaves: Invalid response format");
          }
        }

      } catch (error) {
        // An error occurred during the fetch or parsing the response
        console.error(error);
        showMessagePopup("An unexpected error occurred");
      }
    }

    function toggleBody(emailId) {
      const body = document.getElementById('body' + emailId);

      body.classList.toggle('show');
    }

    function updateSwitchValue(currElement)
    {

      currElement.value = currElement.checked ? 'on' : 'off';

      if (currElement && currElement.previousElementSibling) {
        const prevSibling = currElement.previousElementSibling;

        if (currElement.checked ) {
          currElement.checked = true
        } else if (!currElement.checked ) {
          currElement.checked = false
        }
      }

    }  

  </script>

  <script type="text/javascript" src="/static/js/pop-msg.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"
    integrity="sha384-oBqDVmMz9ATKxIep9tiCxS/Z9fNfEXiDAYTujMAeBAsjFuCZSmKbSSUnQlmh/jp3" crossorigin="anonymous">
    </script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.min.js"
    integrity="sha384-cuYeSxntonz0PPNlHhBs68uyIAVpIIOZZ5JqeqvYYIcEL727kskC66kF92t6Xl2V"
    crossorigin="anonymous"></script>

</body>

</html>